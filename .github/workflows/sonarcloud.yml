name: pull_request
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  security-events: write

jobs:
  build:
    name: build
    runs-on: [self-hosted, nebula, linux] 
    strategy:
      fail-fast: false
      matrix:
        os: [centos7, ubuntu2004]
        compiler: [gcc-9.3, clang-10]
        exclude:
          - os: centos7
            compiler: clang-10
        include:
          - os: centos7
            compiler: gcc-9.3
            required: true
          - os: ubuntu2004
            compiler: gcc-9.3
            required: false
          - os: ubuntu2004
            compiler: clang-10
            required: false

    steps:
      - name: Prepare environment
        id: prepare
        run: |
          [ -d build/ ] && rm -rf build/* || mkdir -p build
          make init -C tests

      - name: CMake configuration
        id: cmake
        run: |
          case "${{ matrix.compiler }}" in
          gcc-*)
            cmake \
              -DCMAKE_CXX_COMPILER=$TOOLSET_GCC_DIR/bin/g++ \
              -DCMAKE_C_COMPILER=$TOOLSET_GCC_DIR/bin/gcc \
              -DNEBULA_USE_LINKER=mold \
              -DCMAKE_BUILD_TYPE=${{ matrix.os == 'centos7' && 'Release' || 'Debug' }} \
              -DENABLE_TESTING=on \
              -GNinja -B build
            ;;
          clang-*)
            cmake \
              -DCMAKE_CXX_COMPILER=$TOOLSET_CLANG_DIR/bin/clang++ \
              -DCMAKE_C_COMPILER=$TOOLSET_CLANG_DIR/bin/clang \
              -DNEBULA_USE_LINKER=mold \
              -DCMAKE_BUILD_TYPE=RelWithDebInfo \
              -DENABLE_ASAN=on \
              -GNinja -B build
            ;;
          esac

      - name: Make
        run: make RM_DIR=false DEBUG=false ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' J=8 make
        working-directory: build/
        
      - name: Ctest
        run: make RM_DIR=false DEBUG=false ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' J=8 ctest
        working-directory: tests/

      - name: Setup cluster
        run: |
          case "${{ matrix.compiler }}" in
          gcc-*)
            case "${{ matrix.os }}" in
            centos7)
              make CONTAINERIZED=true ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' up
              ;;
            ubuntu2004)
              make CONTAINERIZED=true ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' ENABLE_SSL=true CA_SIGNED=true up
              ;;
            esac
            ;;
          clang-*)
            make CONTAINERIZED=true ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' ENABLE_SSL=false ENABLE_GRAPH_SSL=true up
            ;;
          esac
        working-directory: tests/

      - name: Pytest
        run: make RM_DIR=false DEBUG=false ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' J=8 pytest
        working-directory: tests/

      - name: TCK
        run: make RM_DIR=false DEBUG=false ENABLE_FT_INDEX=true ES_ADDRESS='"elasticsearch":9200' J=8 tck
        working-directory: tests/

      - name: LDBC
        run: make RM_DIR=false DEBUG=false J=8 ldbc
        working-directory: tests/

      - name: Tear down cluster
        run: make RM_DIR=false down
        working-directory: tests/

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ${{ matrix.os }}-${{ matrix.compiler }}-logs
          path: |
            ./build/server_*/logs/
            ./tests/logs/
